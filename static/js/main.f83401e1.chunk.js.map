{"version":3,"sources":["redux/contact/contact-actions.js","redux/contact/contact-reducer.js","redux/store.js","redux/contact/contact-operations.js","components/contactForm/ContactForm.js","redux/contact/contact-selectors.js","components/contactList/ContactList.js","components/filter/Filter.js","components/App.js","index.js"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","createContactRequest","createContactSuccess","createContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","addFilterValue","contacts","createReducer","_","payload","state","filter","item","id","Number","loading","hendleError","response","data","clearError","error","combineReducers","store","configureStore","reducer","contact","contactReducer","devTools","process","axios","defaults","baseURL","ContactForm","name","number","handleInput","e","target","value","setState","handleSubmit","preventDefault","props","onCreateContact","this","fetchContacts","onSubmit","type","onChange","Component","connect","dispatch","a","post","createContact","get","getFilter","getLoadind","getError","getFilteredContacts","createSelector","toLowerCase","includes","deleteContact","delete","onHandleChange","map","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f83401e1.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nconst fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nconst fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nconst createContactRequest = createAction('contacts/createContactRequest');\r\nconst createContactSuccess = createAction('contacts/createContactSuccess');\r\nconst createContactError = createAction('contacts/createContactError');\r\n\r\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nconst deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nconst addFilterValue = createAction('contact/addFilterValue');\r\n\r\nexport {\r\n  addFilterValue,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  createContactRequest,\r\n  createContactSuccess,\r\n  createContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addFilterValue,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  createContactRequest,\r\n  createContactSuccess,\r\n  createContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contact-actions';\r\n\r\nconst contacts = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [createContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) => [\r\n    ...state.filter(item => item.id !== Number(payload)),\r\n  ],\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [addFilterValue]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n  [createContactRequest]: () => true,\r\n  [createContactSuccess]: () => false,\r\n  [createContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst hendleError = (_, { payload }) => payload.response.data;\r\nconst clearError = () => null;\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactRequest]: clearError,\r\n  [fetchContactError]: hendleError,\r\n  [createContactRequest]: clearError,\r\n  [createContactError]: hendleError,\r\n  [deleteContactRequest]: clearError,\r\n  [deleteContactError]: hendleError,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactReducer from './contact/contact-reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contact: contactReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import axios from 'axios';\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  createContactRequest,\r\n  createContactSuccess,\r\n  createContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contact-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3004';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error));\r\n  }\r\n};\r\n\r\nconst createContact = ({ name, number }) => async dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n  dispatch(createContactRequest());\r\n  try {\r\n    const { data } = await axios.post('/contacts', contact);\r\n    dispatch(createContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(createContactError(error));\r\n  }\r\n};\r\n\r\nconst deleteContact = id => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n\r\nexport { fetchContacts, createContact, deleteContact };\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {createContact, fetchContacts} from '../../redux/contact/contact-operations';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  componentDidMount (){\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  handleInput = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onCreateContact(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            name=\"name\"\r\n            type=\"text\"\r\n            onChange={this.handleInput}\r\n            value={name}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            name=\"number\"\r\n            type=\"text\"\r\n            onChange={this.handleInput}\r\n            value={number}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contacts</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onCreateContact: ({ name, number }) =>\r\n    dispatch(createContact({ name, number })),\r\n  fetchContacts: () => dispatch(fetchContacts())\r\n  });\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contact.contacts;\r\n\r\nconst getFilter = state => state.contact.filter;\r\n\r\nconst getLoadind = state => state.contact.loading;\r\n\r\nconst getError = state => state.contact.error;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) =>\r\n    contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    ),\r\n);\r\n\r\nexport { getContacts, getFilter, getLoadind, getError, getFilteredContacts };\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contact/contact-operations';\r\nimport { getError, getFilteredContacts, getLoadind} from '../../redux/contact/contact-selectors';\r\n\r\nconst ContactList = ({ contacts, deleteContact, loading }) => {\r\n  const onHandleChange = e => {\r\n    deleteContact(e.target.id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    {loading && <h2>Loading...</h2>}\r\n      <ul>\r\n        {contacts.map(({ name, id, number }) => (\r\n          <li key={id}>\r\n            <p>\r\n              {name}: {number}\r\n              <button id={id} type=\"button\" onClick={onHandleChange}>\r\n                Delete\r\n              </button>\r\n            </p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getFilteredContacts(state),\r\n  loading: getLoadind(state),\r\n  error: getError(state),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addFilterValue } from '../../redux/contact/contact-actions';\r\nimport { getError, getFilter } from '../../redux/contact/contact-selectors';\r\n\r\nconst Filter = ({ filter, addFilterValue }) => {\r\n  const onHandleChange = e => {\r\n    addFilterValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        onChange={onHandleChange}\r\n        value={filter}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: getFilter(state),\r\n  error: getError(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addFilterValue: value => dispatch(addFilterValue(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport ContactForm from './contactForm/ContactForm';\r\nimport ContactList from './contactList/ContactList';\r\nimport Filter from './filter/Filter';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store'\r\nimport App from './components/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}