{"version":3,"sources":["redux/contact/contact-actions.js","redux/contact/contact-reducer.js","redux/store.js","redux/contact/contact-operations.js","components/contactForm/ContactForm.js","redux/contact/contact-selectors.js","components/contactList/ContactList.js","components/filter/Filter.js","components/App.js","index.js"],"names":["createContactRequest","createAction","createContactSuccess","createContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","addFilterValue","contacts","createReducer","state","payload","filter","item","id","Number","_","loading","combineReducers","store","configureStore","reducer","contact","contactReducer","devTools","process","axios","defaults","baseURL","ContactForm","name","number","handleInput","e","target","value","setState","handleSubmit","preventDefault","props","onCreateContact","this","onSubmit","type","onChange","Component","connect","dispatch","a","post","data","createContact","getFilter","getLoadind","getFilteredContacts","createSelector","toLowerCase","includes","deleteContact","delete","onHandleChange","map","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d888f3c.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst createContactRequest = createAction('contacts/createContactRequest');\r\nconst createContactSuccess = createAction('contacts/createContactSuccess');\r\nconst createContactError = createAction('contacts/createContactError');\r\n\r\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nconst deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nconst addFilterValue = createAction('contact/addFilterValue');\r\n\r\nexport {\r\n  addFilterValue,\r\n  createContactRequest,\r\n  createContactSuccess,\r\n  createContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addFilterValue,\r\n  createContactRequest,\r\n  createContactSuccess,\r\n  createContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contact-actions';\r\n\r\nconst contacts = createReducer([], {\r\n  [createContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) => [\r\n    ...state.filter(item => item.id !== Number(payload)),\r\n  ],\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [addFilterValue]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [createContactRequest]: () => true,\r\n  [createContactSuccess]: () => false,\r\n  [createContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactReducer from './contact/contact-reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contact: contactReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import axios from 'axios';\r\nimport {\r\n  createContactRequest,\r\n  createContactSuccess,\r\n  createContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contact-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3004';\r\n\r\nconst createContact = ({ name, number }) => async dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n  dispatch(createContactRequest());\r\n  try {\r\n    const { data } = await axios.post('/contacts', contact);\r\n    dispatch(createContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(createContactError(error));\r\n  }\r\n};\r\n\r\nconst deleteContact = id => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n\r\nexport { createContact, deleteContact };\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {createContact} from '../../redux/contact/contact-operations';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleInput = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onCreateContact(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            name=\"name\"\r\n            type=\"text\"\r\n            onChange={this.handleInput}\r\n            value={name}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            name=\"number\"\r\n            type=\"text\"\r\n            onChange={this.handleInput}\r\n            value={number}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contacts</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onCreateContact: ({ name, number }) =>\r\n    dispatch(createContact({ name, number })),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contact.contacts;\r\n\r\nconst getFilter = state => state.contact.filter;\r\n\r\nconst getLoadind = state => state.contact.loading;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) =>\r\n    contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    ),\r\n);\r\n\r\nexport { getFilter, getLoadind, getFilteredContacts };\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contact/contact-operations';\r\nimport { getFilteredContacts, getLoadind} from '../../redux/contact/contact-selectors';\r\n\r\nconst ContactList = ({ contacts, deleteContact, loading }) => {\r\n  const onHandleChange = e => {\r\n    deleteContact(e.target.id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    {loading && <h2>Loading...</h2>}\r\n      <ul>\r\n        {contacts.map(({ name, id, number }) => (\r\n          <li key={id}>\r\n            <p>\r\n              {name}: {number}\r\n              <button id={id} type=\"button\" onClick={onHandleChange}>\r\n                Delete\r\n              </button>\r\n            </p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getFilteredContacts(state),\r\n  loading: getLoadind(state),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addFilterValue } from '../../redux/contact/contact-actions';\r\nimport { getFilter } from '../../redux/contact/contact-selectors';\r\n\r\nconst Filter = ({ filter, addFilterValue }) => {\r\n  const onHandleChange = e => {\r\n    addFilterValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        onChange={onHandleChange}\r\n        value={filter}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addFilterValue: value => dispatch(addFilterValue(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport ContactForm from './contactForm/ContactForm';\r\nimport ContactList from './contactList/ContactList';\r\nimport Filter from './filter/Filter';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store'\r\nimport App from './components/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}